---
import Favicon from '@components/html/meta-tags/favicon.astro';
import Preloads from '@components/html/meta-tags/preloads.astro';
import { SITE_URL } from '@/consts';

interface PageLangs {
  langPrefix: string;
  slug: string;
}
interface Props {
  title: string;
  description: string;
  lang: string,
  meta_tags: string,
  pageLangs?: Array<{
    langPrefix: string;
    slug: string;
  }>;
};

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { title, description, pageLangs, lang, meta_tags } = Astro.props;
const defaultPage = pageLangs?.find(item => item.langPrefix === 'en');
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content={Astro.generator} />

<title>{`${title} | Azion + BrazilJS`}</title>
<meta name="title" content={`${title} | Azion + BrazilJS`} />
<meta name="description" content={description} />
<meta name="keywords" content={meta_tags} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={`${title} | Azion + BrazilJS`} />
<meta property="og:description" content={description} />
<meta property="og:site_name" content="Azion Technologies Console Template | Azion + BrazilJS" />
<meta property="og:locale" content={lang} />
<meta property="og:image:type" content="image/png" />

<Favicon />
<Preloads />

<link rel="canonical" href={canonicalURL} />
{
  // runs en, es, pt-br
  pageLangs?.map(({ langPrefix, slug }) => (
    <link rel="alternate" href={`${SITE_URL}${slug}`} hreflang={langPrefix.toLowerCase()} />
  ))
}

{
  defaultPage ? (
    <link rel="alternate" href={`${SITE_URL}${defaultPage.slug}`} hreflang="x-default" />
  ) : null
}
